name: Node.js CI

on: push

jobs:
  test:
    name: Ubuntu Node.js ${{ matrix.node-version }}
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version:
          - 18
          - 16
          - 14
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: wcjiang
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Builder Lib & Example
        run: npm run build

      # - name: Run tests with Postgres
      #   env:
      #     POSTGRES_HOST: localhost
      #     POSTGRES_USER: postgres
      #     POSTGRES_PASSWORD: wcjiang
      #     POSTGRES_DB: typenexus-base
      #   run: |
      #     npm test

      - name: Run example base tests with Postgres 
        working-directory: examples/base
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: localhost
          # The default PostgreSQL port
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: wcjiang
        run: |
          npm install
          npm run test

      - name: Run example CURD tests with Postgres 
        working-directory: examples/curd
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: localhost
          # The default PostgreSQL port
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: wcjiang
        run: |
          npm install
          npm run test

      - name: Run example authorized tests
        working-directory: examples/authorized
        run: npm run test

      - name: Run example current-user tests
        working-directory: examples/current-user
        run: npm run test

      - name: Run example status-code tests
        working-directory: examples/status-code
        run: npm run test

      - name: Run example http-errors tests
        working-directory: examples/http-errors
        run: npm run test

      - name: Run example middleware tests
        working-directory: examples/middleware
        run: npm run test

      - name: Run example redirect tests
        working-directory: examples/redirect
        run: npm run test

      - name: Run example status-code tests
        working-directory: examples/status-code
        run: npm run test

      - name: Run example views-render tests
        working-directory: examples/views-render
        run: npm run test

  trigger_tests:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Trigger tests
        uses: actions/github-script@v6
        with:
          script: |
            const res = await github.rest.repos.createDispatchEvent({
              owner: 'jaywcjlove',
              repo: 'typenexus',
              event_type: 'run-deploy'
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}